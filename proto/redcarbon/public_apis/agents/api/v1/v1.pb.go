// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1-devel
// 	protoc        (unknown)
// source: redcarbon/public_apis/agents/api/v1/v1.proto

package agentsPublicApiV1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HZReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ip       string `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Hostname string `protobuf:"bytes,4,opt,name=hostname,proto3" json:"hostname,omitempty"`
}

func (x *HZReq) Reset() {
	*x = HZReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HZReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HZReq) ProtoMessage() {}

func (x *HZReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HZReq.ProtoReflect.Descriptor instead.
func (*HZReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{0}
}

func (x *HZReq) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *HZReq) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

type HZRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *HZRes) Reset() {
	*x = HZRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HZRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HZRes) ProtoMessage() {}

func (x *HZRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HZRes.ProtoReflect.Descriptor instead.
func (*HZRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{1}
}

func (x *HZRes) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type PullConfigurationsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PullConfigurationsReq) Reset() {
	*x = PullConfigurationsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullConfigurationsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullConfigurationsReq) ProtoMessage() {}

func (x *PullConfigurationsReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullConfigurationsReq.ProtoReflect.Descriptor instead.
func (*PullConfigurationsReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{2}
}

type PullConfigurationsRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentConfigurations []*AgentConfiguration `protobuf:"bytes,1,rep,name=agent_configurations,json=agentConfigurations,proto3" json:"agent_configurations,omitempty"`
}

func (x *PullConfigurationsRes) Reset() {
	*x = PullConfigurationsRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PullConfigurationsRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PullConfigurationsRes) ProtoMessage() {}

func (x *PullConfigurationsRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PullConfigurationsRes.ProtoReflect.Descriptor instead.
func (*PullConfigurationsRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{3}
}

func (x *PullConfigurationsRes) GetAgentConfigurations() []*AgentConfiguration {
	if x != nil {
		return x.AgentConfigurations
	}
	return nil
}

type SendSentinelOneDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentConfigurationId string `protobuf:"bytes,1,opt,name=agent_configuration_id,json=agentConfigurationId,proto3" json:"agent_configuration_id,omitempty"`
	Data                 string `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *SendSentinelOneDataReq) Reset() {
	*x = SendSentinelOneDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSentinelOneDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSentinelOneDataReq) ProtoMessage() {}

func (x *SendSentinelOneDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSentinelOneDataReq.ProtoReflect.Descriptor instead.
func (*SendSentinelOneDataReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{4}
}

func (x *SendSentinelOneDataReq) GetAgentConfigurationId() string {
	if x != nil {
		return x.AgentConfigurationId
	}
	return ""
}

func (x *SendSentinelOneDataReq) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type SendSentinelOneDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *SendSentinelOneDataRes) Reset() {
	*x = SendSentinelOneDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSentinelOneDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSentinelOneDataRes) ProtoMessage() {}

func (x *SendSentinelOneDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSentinelOneDataRes.ProtoReflect.Descriptor instead.
func (*SendSentinelOneDataRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{5}
}

func (x *SendSentinelOneDataRes) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type SendGrayLogImpossibleTravelDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentConfigurationId string                        `protobuf:"bytes,1,opt,name=agent_configuration_id,json=agentConfigurationId,proto3" json:"agent_configuration_id,omitempty"`
	User                 string                        `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	Ips                  []string                      `protobuf:"bytes,3,rep,name=ips,proto3" json:"ips,omitempty"`
	Countries            []string                      `protobuf:"bytes,4,rep,name=countries,proto3" json:"countries,omitempty"`
	ImpossibleTravelLogs []*GrayLogImpossibleTravelLog `protobuf:"bytes,5,rep,name=impossible_travel_logs,json=impossibleTravelLogs,proto3" json:"impossible_travel_logs,omitempty"`
}

func (x *SendGrayLogImpossibleTravelDataReq) Reset() {
	*x = SendGrayLogImpossibleTravelDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGrayLogImpossibleTravelDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGrayLogImpossibleTravelDataReq) ProtoMessage() {}

func (x *SendGrayLogImpossibleTravelDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGrayLogImpossibleTravelDataReq.ProtoReflect.Descriptor instead.
func (*SendGrayLogImpossibleTravelDataReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{6}
}

func (x *SendGrayLogImpossibleTravelDataReq) GetAgentConfigurationId() string {
	if x != nil {
		return x.AgentConfigurationId
	}
	return ""
}

func (x *SendGrayLogImpossibleTravelDataReq) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *SendGrayLogImpossibleTravelDataReq) GetIps() []string {
	if x != nil {
		return x.Ips
	}
	return nil
}

func (x *SendGrayLogImpossibleTravelDataReq) GetCountries() []string {
	if x != nil {
		return x.Countries
	}
	return nil
}

func (x *SendGrayLogImpossibleTravelDataReq) GetImpossibleTravelLogs() []*GrayLogImpossibleTravelLog {
	if x != nil {
		return x.ImpossibleTravelLogs
	}
	return nil
}

type SendGrayLogImpossibleTravelDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *SendGrayLogImpossibleTravelDataRes) Reset() {
	*x = SendGrayLogImpossibleTravelDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGrayLogImpossibleTravelDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGrayLogImpossibleTravelDataRes) ProtoMessage() {}

func (x *SendGrayLogImpossibleTravelDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGrayLogImpossibleTravelDataRes.ProtoReflect.Descriptor instead.
func (*SendGrayLogImpossibleTravelDataRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{7}
}

func (x *SendGrayLogImpossibleTravelDataRes) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type SendGrayLogDatamineQueryResultsDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentConfigurationId string                   `protobuf:"bytes,1,opt,name=agent_configuration_id,json=agentConfigurationId,proto3" json:"agent_configuration_id,omitempty"`
	QueryId              string                   `protobuf:"bytes,2,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Results              []*GrayLogDataMineResult `protobuf:"bytes,3,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *SendGrayLogDatamineQueryResultsDataReq) Reset() {
	*x = SendGrayLogDatamineQueryResultsDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGrayLogDatamineQueryResultsDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGrayLogDatamineQueryResultsDataReq) ProtoMessage() {}

func (x *SendGrayLogDatamineQueryResultsDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGrayLogDatamineQueryResultsDataReq.ProtoReflect.Descriptor instead.
func (*SendGrayLogDatamineQueryResultsDataReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{8}
}

func (x *SendGrayLogDatamineQueryResultsDataReq) GetAgentConfigurationId() string {
	if x != nil {
		return x.AgentConfigurationId
	}
	return ""
}

func (x *SendGrayLogDatamineQueryResultsDataReq) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *SendGrayLogDatamineQueryResultsDataReq) GetResults() []*GrayLogDataMineResult {
	if x != nil {
		return x.Results
	}
	return nil
}

type SendGrayLogDatamineQueryResultsDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *SendGrayLogDatamineQueryResultsDataRes) Reset() {
	*x = SendGrayLogDatamineQueryResultsDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGrayLogDatamineQueryResultsDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGrayLogDatamineQueryResultsDataRes) ProtoMessage() {}

func (x *SendGrayLogDatamineQueryResultsDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGrayLogDatamineQueryResultsDataRes.ProtoReflect.Descriptor instead.
func (*SendGrayLogDatamineQueryResultsDataRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{9}
}

func (x *SendGrayLogDatamineQueryResultsDataRes) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type SendGrayLogDatamineQueryErrorDataReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentConfigurationId string `protobuf:"bytes,1,opt,name=agent_configuration_id,json=agentConfigurationId,proto3" json:"agent_configuration_id,omitempty"`
	QueryId              string `protobuf:"bytes,2,opt,name=query_id,json=queryId,proto3" json:"query_id,omitempty"`
	Error                string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *SendGrayLogDatamineQueryErrorDataReq) Reset() {
	*x = SendGrayLogDatamineQueryErrorDataReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGrayLogDatamineQueryErrorDataReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGrayLogDatamineQueryErrorDataReq) ProtoMessage() {}

func (x *SendGrayLogDatamineQueryErrorDataReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGrayLogDatamineQueryErrorDataReq.ProtoReflect.Descriptor instead.
func (*SendGrayLogDatamineQueryErrorDataReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{10}
}

func (x *SendGrayLogDatamineQueryErrorDataReq) GetAgentConfigurationId() string {
	if x != nil {
		return x.AgentConfigurationId
	}
	return ""
}

func (x *SendGrayLogDatamineQueryErrorDataReq) GetQueryId() string {
	if x != nil {
		return x.QueryId
	}
	return ""
}

func (x *SendGrayLogDatamineQueryErrorDataReq) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type SendGrayLogDatamineQueryErrorDataRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ReceivedAt *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=received_at,json=receivedAt,proto3" json:"received_at,omitempty"`
}

func (x *SendGrayLogDatamineQueryErrorDataRes) Reset() {
	*x = SendGrayLogDatamineQueryErrorDataRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendGrayLogDatamineQueryErrorDataRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendGrayLogDatamineQueryErrorDataRes) ProtoMessage() {}

func (x *SendGrayLogDatamineQueryErrorDataRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendGrayLogDatamineQueryErrorDataRes.ProtoReflect.Descriptor instead.
func (*SendGrayLogDatamineQueryErrorDataRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{11}
}

func (x *SendGrayLogDatamineQueryErrorDataRes) GetReceivedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ReceivedAt
	}
	return nil
}

type RefreshTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RefreshTokenReq) Reset() {
	*x = RefreshTokenReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenReq) ProtoMessage() {}

func (x *RefreshTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenReq.ProtoReflect.Descriptor instead.
func (*RefreshTokenReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{12}
}

type RefreshTokenRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token        string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *RefreshTokenRes) Reset() {
	*x = RefreshTokenRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RefreshTokenRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RefreshTokenRes) ProtoMessage() {}

func (x *RefreshTokenRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RefreshTokenRes.ProtoReflect.Descriptor instead.
func (*RefreshTokenRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{13}
}

func (x *RefreshTokenRes) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RefreshTokenRes) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type GetGrayLogDataMinePendingQueriesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentConfigurationId string `protobuf:"bytes,1,opt,name=agent_configuration_id,json=agentConfigurationId,proto3" json:"agent_configuration_id,omitempty"`
}

func (x *GetGrayLogDataMinePendingQueriesReq) Reset() {
	*x = GetGrayLogDataMinePendingQueriesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrayLogDataMinePendingQueriesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrayLogDataMinePendingQueriesReq) ProtoMessage() {}

func (x *GetGrayLogDataMinePendingQueriesReq) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrayLogDataMinePendingQueriesReq.ProtoReflect.Descriptor instead.
func (*GetGrayLogDataMinePendingQueriesReq) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{14}
}

func (x *GetGrayLogDataMinePendingQueriesReq) GetAgentConfigurationId() string {
	if x != nil {
		return x.AgentConfigurationId
	}
	return ""
}

type GetGrayLogDataMinePendingQueriesRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GraylogDatamineQueries []*GrayLogDataMineQuery `protobuf:"bytes,1,rep,name=graylog_datamine_queries,json=graylogDatamineQueries,proto3" json:"graylog_datamine_queries,omitempty"`
}

func (x *GetGrayLogDataMinePendingQueriesRes) Reset() {
	*x = GetGrayLogDataMinePendingQueriesRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetGrayLogDataMinePendingQueriesRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetGrayLogDataMinePendingQueriesRes) ProtoMessage() {}

func (x *GetGrayLogDataMinePendingQueriesRes) ProtoReflect() protoreflect.Message {
	mi := &file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetGrayLogDataMinePendingQueriesRes.ProtoReflect.Descriptor instead.
func (*GetGrayLogDataMinePendingQueriesRes) Descriptor() ([]byte, []int) {
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP(), []int{15}
}

func (x *GetGrayLogDataMinePendingQueriesRes) GetGraylogDatamineQueries() []*GrayLogDataMineQuery {
	if x != nil {
		return x.GraylogDatamineQueries
	}
	return nil
}

var File_redcarbon_public_apis_agents_api_v1_v1_proto protoreflect.FileDescriptor

var file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDesc = []byte{
	0x0a, 0x2c, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x23,
	0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2f, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2f,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33, 0x0a, 0x05, 0x48, 0x5a, 0x52, 0x65, 0x71, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x70, 0x12, 0x1a,
	0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x44, 0x0a, 0x05, 0x48, 0x5a,
	0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x17, 0x0a, 0x15, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x22, 0x83, 0x01, 0x0a, 0x15, 0x50, 0x75,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x52, 0x65, 0x73, 0x12, 0x6a, 0x0a, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x37, 0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75,
	0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x13, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22,
	0x62, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4f,
	0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x55, 0x0a, 0x16, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a,
	0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x95, 0x02, 0x0a, 0x22, 0x53,
	0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x73,
	0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x69,
	0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x70, 0x73, 0x12, 0x1c, 0x0a,
	0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x12, 0x75, 0x0a, 0x16, 0x69,
	0x6d, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x5f, 0x6c, 0x6f, 0x67, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3f, 0x2e, 0x72, 0x65,
	0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x4c, 0x6f, 0x67, 0x52, 0x14, 0x69, 0x6d,
	0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x4c, 0x6f,
	0x67, 0x73, 0x22, 0x61, 0x0a, 0x22, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f,
	0x67, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0xcf, 0x01, 0x0a, 0x26, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72,
	0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x12, 0x34, 0x0a, 0x16, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x54, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x07,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x65, 0x0a, 0x26, 0x53, 0x65, 0x6e, 0x64, 0x47,
	0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x74, 0x22, 0x8d,
	0x01, 0x0a, 0x24, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x16, 0x61, 0x67, 0x65, 0x6e, 0x74,
	0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x71, 0x75, 0x65, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x22, 0x63,
	0x0a, 0x24, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74,
	0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x12, 0x3b, 0x0a, 0x0b, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65,
	0x64, 0x41, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x22, 0x4c, 0x0a, 0x0f, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x5b, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x79, 0x4c,
	0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e,
	0x67, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x12, 0x34, 0x0a, 0x16, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x61, 0x67, 0x65,
	0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x9a, 0x01, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x51,
	0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x12, 0x73, 0x0a, 0x18, 0x67, 0x72, 0x61,
	0x79, 0x6c, 0x6f, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x5f, 0x71, 0x75,
	0x65, 0x72, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x39, 0x2e, 0x72, 0x65,
	0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e,
	0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x16, 0x67, 0x72, 0x61, 0x79, 0x6c, 0x6f, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x32, 0x8e,
	0x0a, 0x0a, 0x14, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41,
	0x70, 0x69, 0x56, 0x31, 0x53, 0x72, 0x76, 0x12, 0x5e, 0x0a, 0x02, 0x48, 0x5a, 0x12, 0x2a, 0x2e,
	0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x48, 0x5a, 0x52, 0x65, 0x71, 0x1a, 0x2a, 0x2e, 0x72, 0x65, 0x64, 0x63,
	0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x48, 0x5a, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x8e, 0x01, 0x0a, 0x12, 0x50, 0x75, 0x6c, 0x6c,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3a,
	0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x3a, 0x2e, 0x72, 0x65, 0x64,
	0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31,
	0x2e, 0x50, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x91, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x3b, 0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x69,
	0x6e, 0x65, 0x6c, 0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x3b, 0x2e,
	0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63,
	0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6e, 0x65, 0x6c,
	0x4f, 0x6e, 0x65, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0xb5, 0x01, 0x0a,
	0x1f, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x6f,
	0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x47, 0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c,
	0x6f, 0x67, 0x49, 0x6d, 0x70, 0x6f, 0x73, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x76,
	0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x47, 0x2e, 0x72, 0x65, 0x64, 0x63,
	0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x49, 0x6d, 0x70, 0x6f, 0x73,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0xc1, 0x01, 0x0a, 0x23, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61,
	0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4b, 0x2e, 0x72,
	0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61,
	0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x4b, 0x2e, 0x72, 0x65, 0x64, 0x63,
	0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x6d,
	0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0xbb, 0x01, 0x0a, 0x21, 0x53, 0x65, 0x6e,
	0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x12, 0x49,
	0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69,
	0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67,
	0x44, 0x61, 0x74, 0x61, 0x6d, 0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x1a, 0x49, 0x2e, 0x72, 0x65, 0x64, 0x63,
	0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x6e, 0x64, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x6d,
	0x69, 0x6e, 0x65, 0x51, 0x75, 0x65, 0x72, 0x79, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x7c, 0x0a, 0x0c, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73,
	0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x34, 0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62,
	0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61,
	0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x66,
	0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x34, 0x2e, 0x72,
	0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f,
	0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x76, 0x31, 0x2e, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x73, 0x22, 0x00, 0x12, 0xb8, 0x01, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x79,
	0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69,
	0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x12, 0x48, 0x2e, 0x72, 0x65, 0x64, 0x63,
	0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69,
	0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x47, 0x72, 0x61, 0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x69,
	0x6e, 0x65, 0x50, 0x65, 0x6e, 0x64, 0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x48, 0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e, 0x2e,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x47, 0x72, 0x61,
	0x79, 0x4c, 0x6f, 0x67, 0x44, 0x61, 0x74, 0x61, 0x4d, 0x69, 0x6e, 0x65, 0x50, 0x65, 0x6e, 0x64,
	0x69, 0x6e, 0x67, 0x51, 0x75, 0x65, 0x72, 0x69, 0x65, 0x73, 0x52, 0x65, 0x73, 0x22, 0x00, 0x42,
	0x4e, 0x5a, 0x4c, 0x70, 0x6b, 0x67, 0x2e, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72, 0x62, 0x6f, 0x6e,
	0x2e, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x72, 0x65, 0x64, 0x63, 0x61, 0x72,
	0x62, 0x6f, 0x6e, 0x2f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x5f, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x76, 0x31, 0x3b, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x70, 0x69, 0x56, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescOnce sync.Once
	file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescData = file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDesc
)

func file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescGZIP() []byte {
	file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescOnce.Do(func() {
		file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescData)
	})
	return file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDescData
}

var file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_redcarbon_public_apis_agents_api_v1_v1_proto_goTypes = []interface{}{
	(*HZReq)(nil),                                  // 0: redcarbon.public_apis.agents.api.v1.HZReq
	(*HZRes)(nil),                                  // 1: redcarbon.public_apis.agents.api.v1.HZRes
	(*PullConfigurationsReq)(nil),                  // 2: redcarbon.public_apis.agents.api.v1.PullConfigurationsReq
	(*PullConfigurationsRes)(nil),                  // 3: redcarbon.public_apis.agents.api.v1.PullConfigurationsRes
	(*SendSentinelOneDataReq)(nil),                 // 4: redcarbon.public_apis.agents.api.v1.SendSentinelOneDataReq
	(*SendSentinelOneDataRes)(nil),                 // 5: redcarbon.public_apis.agents.api.v1.SendSentinelOneDataRes
	(*SendGrayLogImpossibleTravelDataReq)(nil),     // 6: redcarbon.public_apis.agents.api.v1.SendGrayLogImpossibleTravelDataReq
	(*SendGrayLogImpossibleTravelDataRes)(nil),     // 7: redcarbon.public_apis.agents.api.v1.SendGrayLogImpossibleTravelDataRes
	(*SendGrayLogDatamineQueryResultsDataReq)(nil), // 8: redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryResultsDataReq
	(*SendGrayLogDatamineQueryResultsDataRes)(nil), // 9: redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryResultsDataRes
	(*SendGrayLogDatamineQueryErrorDataReq)(nil),   // 10: redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryErrorDataReq
	(*SendGrayLogDatamineQueryErrorDataRes)(nil),   // 11: redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryErrorDataRes
	(*RefreshTokenReq)(nil),                        // 12: redcarbon.public_apis.agents.api.v1.RefreshTokenReq
	(*RefreshTokenRes)(nil),                        // 13: redcarbon.public_apis.agents.api.v1.RefreshTokenRes
	(*GetGrayLogDataMinePendingQueriesReq)(nil),    // 14: redcarbon.public_apis.agents.api.v1.GetGrayLogDataMinePendingQueriesReq
	(*GetGrayLogDataMinePendingQueriesRes)(nil),    // 15: redcarbon.public_apis.agents.api.v1.GetGrayLogDataMinePendingQueriesRes
	(*timestamppb.Timestamp)(nil),                  // 16: google.protobuf.Timestamp
	(*AgentConfiguration)(nil),                     // 17: redcarbon.public_apis.agents.api.v1.AgentConfiguration
	(*GrayLogImpossibleTravelLog)(nil),             // 18: redcarbon.public_apis.agents.api.v1.GrayLogImpossibleTravelLog
	(*GrayLogDataMineResult)(nil),                  // 19: redcarbon.public_apis.agents.api.v1.GrayLogDataMineResult
	(*GrayLogDataMineQuery)(nil),                   // 20: redcarbon.public_apis.agents.api.v1.GrayLogDataMineQuery
}
var file_redcarbon_public_apis_agents_api_v1_v1_proto_depIdxs = []int32{
	16, // 0: redcarbon.public_apis.agents.api.v1.HZRes.received_at:type_name -> google.protobuf.Timestamp
	17, // 1: redcarbon.public_apis.agents.api.v1.PullConfigurationsRes.agent_configurations:type_name -> redcarbon.public_apis.agents.api.v1.AgentConfiguration
	16, // 2: redcarbon.public_apis.agents.api.v1.SendSentinelOneDataRes.received_at:type_name -> google.protobuf.Timestamp
	18, // 3: redcarbon.public_apis.agents.api.v1.SendGrayLogImpossibleTravelDataReq.impossible_travel_logs:type_name -> redcarbon.public_apis.agents.api.v1.GrayLogImpossibleTravelLog
	16, // 4: redcarbon.public_apis.agents.api.v1.SendGrayLogImpossibleTravelDataRes.received_at:type_name -> google.protobuf.Timestamp
	19, // 5: redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryResultsDataReq.results:type_name -> redcarbon.public_apis.agents.api.v1.GrayLogDataMineResult
	16, // 6: redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryResultsDataRes.received_at:type_name -> google.protobuf.Timestamp
	16, // 7: redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryErrorDataRes.received_at:type_name -> google.protobuf.Timestamp
	20, // 8: redcarbon.public_apis.agents.api.v1.GetGrayLogDataMinePendingQueriesRes.graylog_datamine_queries:type_name -> redcarbon.public_apis.agents.api.v1.GrayLogDataMineQuery
	0,  // 9: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.HZ:input_type -> redcarbon.public_apis.agents.api.v1.HZReq
	2,  // 10: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.PullConfigurations:input_type -> redcarbon.public_apis.agents.api.v1.PullConfigurationsReq
	4,  // 11: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendSentinelOneData:input_type -> redcarbon.public_apis.agents.api.v1.SendSentinelOneDataReq
	6,  // 12: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendGrayLogImpossibleTravelData:input_type -> redcarbon.public_apis.agents.api.v1.SendGrayLogImpossibleTravelDataReq
	8,  // 13: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendGrayLogDatamineQueryResultsData:input_type -> redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryResultsDataReq
	10, // 14: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendGrayLogDatamineQueryErrorData:input_type -> redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryErrorDataReq
	12, // 15: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.RefreshToken:input_type -> redcarbon.public_apis.agents.api.v1.RefreshTokenReq
	14, // 16: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.GetGrayLogDataMinePendingQueries:input_type -> redcarbon.public_apis.agents.api.v1.GetGrayLogDataMinePendingQueriesReq
	1,  // 17: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.HZ:output_type -> redcarbon.public_apis.agents.api.v1.HZRes
	3,  // 18: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.PullConfigurations:output_type -> redcarbon.public_apis.agents.api.v1.PullConfigurationsRes
	5,  // 19: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendSentinelOneData:output_type -> redcarbon.public_apis.agents.api.v1.SendSentinelOneDataRes
	7,  // 20: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendGrayLogImpossibleTravelData:output_type -> redcarbon.public_apis.agents.api.v1.SendGrayLogImpossibleTravelDataRes
	9,  // 21: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendGrayLogDatamineQueryResultsData:output_type -> redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryResultsDataRes
	11, // 22: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.SendGrayLogDatamineQueryErrorData:output_type -> redcarbon.public_apis.agents.api.v1.SendGrayLogDatamineQueryErrorDataRes
	13, // 23: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.RefreshToken:output_type -> redcarbon.public_apis.agents.api.v1.RefreshTokenRes
	15, // 24: redcarbon.public_apis.agents.api.v1.AgentsPublicApiV1Srv.GetGrayLogDataMinePendingQueries:output_type -> redcarbon.public_apis.agents.api.v1.GetGrayLogDataMinePendingQueriesRes
	17, // [17:25] is the sub-list for method output_type
	9,  // [9:17] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_redcarbon_public_apis_agents_api_v1_v1_proto_init() }
func file_redcarbon_public_apis_agents_api_v1_v1_proto_init() {
	if File_redcarbon_public_apis_agents_api_v1_v1_proto != nil {
		return
	}
	file_redcarbon_public_apis_agents_api_v1_types_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HZReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HZRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullConfigurationsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PullConfigurationsRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSentinelOneDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSentinelOneDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGrayLogImpossibleTravelDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGrayLogImpossibleTravelDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGrayLogDatamineQueryResultsDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGrayLogDatamineQueryResultsDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGrayLogDatamineQueryErrorDataReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendGrayLogDatamineQueryErrorDataRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RefreshTokenRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrayLogDataMinePendingQueriesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetGrayLogDataMinePendingQueriesRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_redcarbon_public_apis_agents_api_v1_v1_proto_goTypes,
		DependencyIndexes: file_redcarbon_public_apis_agents_api_v1_v1_proto_depIdxs,
		MessageInfos:      file_redcarbon_public_apis_agents_api_v1_v1_proto_msgTypes,
	}.Build()
	File_redcarbon_public_apis_agents_api_v1_v1_proto = out.File
	file_redcarbon_public_apis_agents_api_v1_v1_proto_rawDesc = nil
	file_redcarbon_public_apis_agents_api_v1_v1_proto_goTypes = nil
	file_redcarbon_public_apis_agents_api_v1_v1_proto_depIdxs = nil
}
